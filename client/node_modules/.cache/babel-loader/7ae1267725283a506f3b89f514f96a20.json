{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\badri\\\\OneDrive\\\\Desktop\\\\StudentResults\\\\client\\\\src\\\\components\\\\CombinationSubject.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, Fragment } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CombinationSubject = () => {\n  _s();\n\n  const [dat, setdata] = useState([]);\n  const [dept, setdept] = useState(\"\");\n  const [sem, setsem] = useState(\"\");\n  const [sub, setsub] = useState(\"\");\n\n  const Ress = props => {\n    // console.log(props.da)\n    var i = 0; // console.log(x);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"subjects\",\n        children: \"Select Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"\",\n        id: \"subjects\",\n        value: sub,\n        onChange: event => setsub(String(event.target.value)),\n        children: props.da.map(item => {\n          i++;\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: `${item.Subject}`,\n            children: `${item.Subject}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 27\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, \"opt\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this);\n  };\n\n  useEffect(() => {\n    const sublist = async () => {\n      const res = await fetch('http://localhost:3001/sub', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await res.json();\n\n      if (data.status === 'ok') {\n        setdata(data.data);\n      } else {\n        alert(data.message);\n      }\n    };\n\n    setTimeout(() => {\n      sublist();\n    }, 1000); //   console.log(\"hello\");\n  }, []);\n\n  const handlesubmit = async e => {\n    // e.preventDefaults();\n    console.log(dept, res, sub);\n    const res = await fetch('http://localhost:3001/mansub', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        dept,\n        sem,\n        sub\n      })\n    });\n    const data = await res.json();\n\n    if (data.status === 'ok') {\n      setdata(data.data);\n      alert(data.message);\n    } else {\n      alert(data.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add Subject Combination\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Subject Combination\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Ress, {\n      da: dat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlesubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CombinationSubject, \"b9X8QFUYAIzc8FQIa8nzZRIdigA=\");\n\n_c = CombinationSubject;\nexport default CombinationSubject;\n\nvar _c;\n\n$RefreshReg$(_c, \"CombinationSubject\");","map":{"version":3,"sources":["C:/Users/badri/OneDrive/Desktop/StudentResults/client/src/components/CombinationSubject.jsx"],"names":["React","useEffect","useState","Fragment","CombinationSubject","dat","setdata","dept","setdept","sem","setsem","sub","setsub","Ress","props","i","event","String","target","value","da","map","item","Subject","sublist","res","fetch","method","headers","data","json","status","alert","message","setTimeout","handlesubmit","e","console","log","body","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useEffect, useState ,Fragment} from 'react'\r\n\r\nconst CombinationSubject = () => {\r\n    const [dat,setdata] = useState([]);\r\n    const [dept,setdept] = useState(\"\");\r\n    const [sem,setsem] = useState(\"\");\r\n    const [sub,setsub] = useState(\"\");\r\n\r\n    const Ress = (props) => {\r\n        // console.log(props.da)\r\n        var i=0;\r\n        // console.log(x);\r\n        return(\r\n            <div key=\"opt\">\r\n                \r\n                <label htmlFor=\"subjects\">Select Subject</label>\r\n                <select name=\"\" id=\"subjects\" value={sub} onChange={event => setsub(String(event.target.value))}>\r\n                  {\r\n                  props.da.map((item)=>{\r\n                      i++;\r\n                      return(\r\n                          <option value={`${item.Subject}`}>{`${item.Subject}`}</option>\r\n                      )\r\n                  })\r\n                  }\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        const sublist = async() => {\r\n    \r\n            const res = await fetch('http://localhost:3001/sub',{\r\n                method:'POST',\r\n                headers: {\r\n                     'Content-Type' : 'application/json'\r\n                },\r\n               \r\n            })\r\n    \r\n            const data = await res.json()\r\n            if(data.status === 'ok'){\r\n               setdata(data.data);\r\n            }\r\n            else{\r\n                alert(data.message);\r\n            }\r\n        }\r\n        setTimeout(() => {\r\n            sublist();\r\n          }, 1000);\r\n\r\n        //   console.log(\"hello\");\r\n    },[]);\r\n\r\n    const handlesubmit = async(e) => {\r\n        // e.preventDefaults();\r\n        console.log(dept,res,sub);\r\n        const res = await fetch('http://localhost:3001/mansub',{\r\n                method:'POST',\r\n                headers: {\r\n                     'Content-Type' : 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    dept,\r\n                    sem,\r\n                    sub\r\n                })\r\n            })\r\n    \r\n            const data = await res.json()\r\n            if(data.status === 'ok'){\r\n               setdata(data.data);\r\n               alert(data.message);\r\n            }\r\n            else{\r\n                alert(data.message);\r\n            }\r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <h1>Add Subject Combination</h1>\r\n        <h2>Add Subject Combination</h2>\r\n        \r\n            <Ress da={dat}/>\r\n            <button onClick={handlesubmit}>Submit</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CombinationSubject"]},"metadata":{},"sourceType":"module"}