{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\badri\\\\OneDrive\\\\Desktop\\\\StudentResults\\\\client\\\\src\\\\components\\\\File.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { FaUpload } from 'react-icons/fa';\nimport '../css/fil.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction File() {\n  _s();\n\n  window.addEventListener('load', event => {\n    //selecting all required elements\n    const dropArea = document.querySelector(\".drag-area\"),\n          dragText = dropArea.querySelector(\"header\"),\n          button = dropArea.querySelector(\"button\"),\n          input = dropArea.querySelector(\"input\");\n    let file; //this is a global variable and we'll use it inside multiple functions\n\n    button.onclick = () => {\n      input.click(); //if user click on the button then the input also clicked\n    };\n\n    input.addEventListener(\"change\", function () {\n      //getting user select file and [0] this means if user select multiple files then we'll select only the first one\n      file = this.files[0];\n      dropArea.classList.add(\"active\"); //   showFile(); //calling function\n    }); //If user Drag File Over DropArea\n\n    dropArea.addEventListener(\"dragover\", event => {\n      event.preventDefault(); //preventing from default behaviour\n\n      dropArea.classList.add(\"active\");\n      dragText.textContent = \"Release to Upload File\";\n    }); //If user leave dragged File from DropArea\n\n    dropArea.addEventListener(\"dragleave\", () => {\n      dropArea.classList.remove(\"active\");\n      dragText.textContent = \"Drag & Drop to Upload File\";\n    }); //If user drop File on DropArea\n\n    dropArea.addEventListener(\"drop\", event => {\n      event.preventDefault(); //preventing from default behaviour\n      //getting user select file and [0] this means if user select multiple files then we'll select only the first one\n\n      file = event.dataTransfer.files[0]; //   showFile(); //calling function\n    });\n\n    function showFile() {\n      let fileType = file.type; //getting selected file type\n\n      let validExtensions = [\"image/jpeg\", \"image/jpg\", \"image/png\"]; //adding some valid image extensions in array\n\n      if (validExtensions.includes(fileType)) {\n        //if user selected file is an image file\n        let fileReader = new FileReader(); //creating new FileReader object\n\n        fileReader.onload = () => {\n          let fileURL = fileReader.result; //passing user file source in fileURL variable\n          // UNCOMMENT THIS BELOW LINE. I GOT AN ERROR WHILE UPLOADING THIS POST SO I COMMENTED IT\n          // let imgTag = `<img src=\"${fileURL}\" alt=\"image\">`; //creating an img tag and passing user selected file source inside src attribute\n\n          dropArea.innerHTML = imgTag; //adding that created img tag inside dropArea container\n        };\n\n        fileReader.readAsDataURL(file);\n      } else {\n        alert(\"This is not an Image File!\");\n        dropArea.classList.remove(\"active\");\n        dragText.textContent = \"Drag & Drop to Upload File\";\n      }\n    }\n  });\n  const [title, settitle] = useState(\"\");\n  const [file, setFile] = useState(\"\");\n  const [result, setResult] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [v, setv] = useState(localStorage.getItem('reg'));\n  var formdata = new FormData();\n  formdata.append(\"file\", file);\n  var requestOptions = {\n    method: 'POST',\n    body: formdata,\n    redirect: 'follow'\n  };\n\n  const handleUpload = event => {\n    setFile(event.target.files[0]);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch(\"https://file.io\", requestOptions).then(response => response.json()).then(result => setResult(result.link)).then(() => setLoading(false)).catch(error => console.log('error', error));\n    fetch('http://localhost:3001/fileupload', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title,\n        result,\n        v\n      })\n    }).then(response => response.json()).then(result => alert(result.message)).catch(error => console.log('error', error));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fileupload\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"#\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"drag-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"hel\",\n          children: \"File Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"text\",\n          id: \"txt\",\n          placeholder: \"Enter The Name Of The File\",\n          value: title,\n          onChange: event => settitle(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"icon\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fas fa-cloud-upload-alt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n          children: \"Drag & Drop to Upload File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"OR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Browse File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          type: \"submit\",\n          id: \"bt\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n\n_s(File, \"xaIyIEfl7qauAZ6GJdtXBY+qq00=\");\n\n_c = File;\nexport default File;\n\nvar _c;\n\n$RefreshReg$(_c, \"File\");","map":{"version":3,"sources":["C:/Users/badri/OneDrive/Desktop/StudentResults/client/src/components/File.jsx"],"names":["React","useState","FaUpload","File","window","addEventListener","event","dropArea","document","querySelector","dragText","button","input","file","onclick","click","files","classList","add","preventDefault","textContent","remove","dataTransfer","showFile","fileType","type","validExtensions","includes","fileReader","FileReader","onload","fileURL","result","innerHTML","imgTag","readAsDataURL","alert","title","settitle","setFile","setResult","loading","setLoading","v","setv","localStorage","getItem","formdata","FormData","append","requestOptions","method","body","redirect","handleUpload","target","handleSubmit","e","fetch","then","response","json","link","catch","error","console","log","headers","JSON","stringify","message","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { FaUpload } from 'react-icons/fa';\r\nimport '../css/fil.css'\r\n\r\nfunction File() {\r\n  window.addEventListener('load', (event) => {\r\n    //selecting all required elements\r\nconst dropArea = document.querySelector(\".drag-area\"),\r\ndragText = dropArea.querySelector(\"header\"),\r\nbutton = dropArea.querySelector(\"button\"),\r\ninput = dropArea.querySelector(\"input\");\r\nlet file; //this is a global variable and we'll use it inside multiple functions\r\n\r\nbutton.onclick = ()=>{\r\n  input.click(); //if user click on the button then the input also clicked\r\n}\r\n\r\ninput.addEventListener(\"change\", function(){\r\n  //getting user select file and [0] this means if user select multiple files then we'll select only the first one\r\n  file = this.files[0];\r\n  dropArea.classList.add(\"active\");\r\n//   showFile(); //calling function\r\n});\r\n\r\n\r\n//If user Drag File Over DropArea\r\ndropArea.addEventListener(\"dragover\", (event)=>{\r\n  event.preventDefault(); //preventing from default behaviour\r\n  dropArea.classList.add(\"active\");\r\n  dragText.textContent = \"Release to Upload File\";\r\n});\r\n\r\n//If user leave dragged File from DropArea\r\ndropArea.addEventListener(\"dragleave\", ()=>{\r\n  dropArea.classList.remove(\"active\");\r\n  dragText.textContent = \"Drag & Drop to Upload File\";\r\n});\r\n\r\n//If user drop File on DropArea\r\ndropArea.addEventListener(\"drop\", (event)=>{\r\n  event.preventDefault(); //preventing from default behaviour\r\n  //getting user select file and [0] this means if user select multiple files then we'll select only the first one\r\n  file = event.dataTransfer.files[0];\r\n//   showFile(); //calling function\r\n});\r\n\r\nfunction showFile(){\r\n  let fileType = file.type; //getting selected file type\r\n  let validExtensions = [\"image/jpeg\", \"image/jpg\", \"image/png\"]; //adding some valid image extensions in array\r\n  if(validExtensions.includes(fileType)){ //if user selected file is an image file\r\n    let fileReader = new FileReader(); //creating new FileReader object\r\n    fileReader.onload = ()=>{\r\n      let fileURL = fileReader.result; //passing user file source in fileURL variable\r\n        // UNCOMMENT THIS BELOW LINE. I GOT AN ERROR WHILE UPLOADING THIS POST SO I COMMENTED IT\r\n      // let imgTag = `<img src=\"${fileURL}\" alt=\"image\">`; //creating an img tag and passing user selected file source inside src attribute\r\n      dropArea.innerHTML = imgTag; //adding that created img tag inside dropArea container\r\n    }\r\n    fileReader.readAsDataURL(file);\r\n  }else{\r\n    alert(\"This is not an Image File!\");\r\n    dropArea.classList.remove(\"active\");\r\n    dragText.textContent = \"Drag & Drop to Upload File\";\r\n  }\r\n}\r\n  });\r\n    const [title,settitle] = useState(\"\");\r\n    const [file, setFile] = useState(\"\");\r\n    const [result, setResult] = useState({});\r\n    const [loading, setLoading] = useState(false);\r\n    const [v,setv] = useState(localStorage.getItem('reg'));\r\n\r\n    var formdata = new FormData();\r\n    formdata.append(\"file\", file);\r\n\r\n    var requestOptions = {\r\n      method: 'POST',\r\n      body: formdata,\r\n      redirect: 'follow'\r\n    };\r\n\r\n    const handleUpload = (event) => {\r\n      setFile(event.target.files[0]);\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      fetch(\"https://file.io\", requestOptions)\r\n        .then(response => response.json())\r\n        .then(result => setResult(result.link))\r\n        .then(() => setLoading(false))\r\n        .catch(error => console.log('error', error));\r\n\r\n        fetch('http://localhost:3001/fileupload',{\r\n          method:'POST',\r\n          headers: {\r\n               'Content-Type' : 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n              title,\r\n              result,\r\n              v\r\n          })\r\n        })\r\n        .then(response => response.json())\r\n        .then(result => alert(result.message))\r\n        .catch(error => console.log('error', error));\r\n    }\r\n\r\n\r\n  return (\r\n    <div className=\"fileupload\">\r\n      <form  action=\"#\">\r\n        <div class=\"drag-area\">\r\n            <h1 id=\"hel\">File Upload</h1>\r\n            <input type=\"text\" name=\"text\" id=\"txt\" placeholder=\"Enter The Name Of The File\" value={title} onChange={event => settitle(event.target.value)} />\r\n            <div class=\"icon\"><i class=\"fas fa-cloud-upload-alt\"></i></div>\r\n            <header>Drag & Drop to Upload File</header>\r\n            <span>OR</span>\r\n            <button>Browse File</button>\r\n            <input type=\"file\" onChange={handleUpload}  />\r\n            <button onClick={handleSubmit} type=\"submit\" id=\"bt\">Submit</button>\r\n      </div>\r\n    </form>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\n\r\nexport default File;"]},"metadata":{},"sourceType":"module"}