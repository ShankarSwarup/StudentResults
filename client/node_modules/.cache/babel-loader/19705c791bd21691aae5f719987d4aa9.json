{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\badri\\\\OneDrive\\\\Desktop\\\\StudentResults\\\\client\\\\src\\\\components\\\\File.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { FaUpload } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction File() {\n  _s();\n\n  const [title, settitle] = useState(\"\");\n  const [file, setFile] = useState(\"\");\n  const [result, setResult] = useState({});\n  const [loading, setLoading] = useState(false);\n  var formdata = new FormData();\n  formdata.append(\"file\", file);\n  var requestOptions = {\n    method: 'POST',\n    body: formdata,\n    redirect: 'follow'\n  };\n\n  const handleUpload = event => {\n    setFile(event.target.files[0]);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    fetch(\"https://file.io\", requestOptions).then(response => response.json()).then(result => setResult(result.link)).then(() => setLoading(false)).catch(error => console.log('error', error));\n    const res = await fetch('http://localhost:3001/fileupload', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title,\n        result\n      })\n    });\n    const data = await res.json();\n\n    if (data.status === 'ok') {} else {\n      alert(data.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fileupload\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"forminputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          onChange: event => settitle(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"custom-file-upload\",\n          htmlFor: \"file\",\n          children: [/*#__PURE__*/_jsxDEV(FaUpload, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 64\n          }, this), \" Upload file\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"file\",\n          name: \"file\",\n          onChange: handleUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"displayname\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"filename\",\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"subbutton\",\n          onClick: file === \"\" ? () => {\n            setLoading(false);\n          } : () => {\n            setLoading(true);\n          },\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(File, \"UPdMNIlXMg9NGkmEL4VTGr1NP5U=\");\n\n_c = File;\nexport default File;\n\nvar _c;\n\n$RefreshReg$(_c, \"File\");","map":{"version":3,"sources":["C:/Users/badri/OneDrive/Desktop/StudentResults/client/src/components/File.jsx"],"names":["React","useState","FaUpload","File","title","settitle","file","setFile","result","setResult","loading","setLoading","formdata","FormData","append","requestOptions","method","body","redirect","handleUpload","event","target","files","handleSubmit","e","preventDefault","fetch","then","response","json","link","catch","error","console","log","res","headers","JSON","stringify","data","status","alert","message","value","name"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { FaUpload } from 'react-icons/fa';\r\n\r\nfunction File() {\r\n    const [title,settitle] = useState(\"\");\r\n    const [file, setFile] = useState(\"\");\r\n    const [result, setResult] = useState({});\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    var formdata = new FormData();\r\n    formdata.append(\"file\", file);\r\n\r\n    var requestOptions = {\r\n      method: 'POST',\r\n      body: formdata,\r\n      redirect: 'follow'\r\n    };\r\n\r\n    const handleUpload = (event) => {\r\n      setFile(event.target.files[0]);\r\n    }\r\n\r\n    const handleSubmit = async(e) => {\r\n      e.preventDefault();\r\n      fetch(\"https://file.io\", requestOptions)\r\n        .then(response => response.json())\r\n        .then(result => setResult(result.link))\r\n        .then(() => setLoading(false))\r\n        .catch(error => console.log('error', error));\r\n\r\n    const res = await fetch('http://localhost:3001/fileupload',{\r\n            method:'POST',\r\n            headers: {\r\n                 'Content-Type' : 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                title,\r\n                result\r\n            })\r\n        })\r\n\r\n        const data = await res.json()\r\n        if(data.status === 'ok'){\r\n        \r\n        }\r\n        else{\r\n            alert(data.message);\r\n        }\r\n    }\r\n\r\n\r\n  return (\r\n    <div className=\"fileupload\">\r\n      <form onSubmit={handleSubmit} className=\"forminputs\">\r\n        <div >\r\n          <input type=\"text\" value={title} onChange={event => settitle(event.target.value)} />\r\n          <label className=\"custom-file-upload\" htmlFor=\"file\"><FaUpload/> Upload file</label>\r\n          <input type=\"file\" id=\"file\" name=\"file\" onChange={handleUpload} />\r\n        </div>\r\n        <div className=\"displayname\">\r\n          <p className=\"filename\">{file.name}</p>\r\n          <button className=\"subbutton\" onClick={file===\"\" ? () => {setLoading(false)} : () => {setLoading(true)}} type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n      {/* {loading ? <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div> : <p className=\"filename\">{result.link}</p>} */}\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\n\r\nexport default File;"]},"metadata":{},"sourceType":"module"}