{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport React from \"react\";\nimport * as XLSX from \"xlsx\";\nimport { Navigate, useNavigate } from 'react-router-dom';\n\nconst StudentDet = () => {\n  _s();\n\n  const [files, setfiles] = useState();\n\n  const onChange = e => {\n    const [file] = e.target.files;\n    const reader = new FileReader();\n\n    reader.onload = evt => {\n      const bstr = evt.target.result;\n      const wb = XLSX.read(bstr, {\n        type: \"binary\"\n      });\n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname];\n      const data = XLSX.utils.sheet_to_json(ws);\n      setfiles(data);\n    };\n\n    reader.readAsBinaryString(file);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(files);\n    const res = await fetch('https://vignanminiproject.herokuapp.com/excel', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        files\n      })\n    });\n    const data = await res.json();\n\n    if (data.status === 'ok') {\n      alert(\"successful\");\n    } else {\n      alert(data.error);\n    }\n  };\n\n  const Func = () => {};\n};\n\n_s(StudentDet, \"eNyz8M/f0ZUjbvjWBJ8RaxW7BYo=\");\n\n_c = StudentDet;\nexport default StudentDet;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentDet\");","map":{"version":3,"sources":["C:/Users/badri/OneDrive/Desktop/StudentResults/client/src/components/StudentDet.jsx"],"names":["useState","React","XLSX","Navigate","useNavigate","StudentDet","files","setfiles","onChange","e","file","target","reader","FileReader","onload","evt","bstr","result","wb","read","type","wsname","SheetNames","ws","Sheets","data","utils","sheet_to_json","readAsBinaryString","handleSubmit","preventDefault","console","log","res","fetch","method","headers","body","JSON","stringify","json","status","alert","error","Func"],"mappings":";;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAqC,kBAArC;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBP,QAAQ,EAAjC;;AAEA,QAAMQ,QAAQ,GAAIC,CAAD,IAAO;AACtB,UAAM,CAACC,IAAD,IAASD,CAAC,CAACE,MAAF,CAASL,KAAxB;AACA,UAAMM,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AAEAD,IAAAA,MAAM,CAACE,MAAP,GAAiBC,GAAD,IAAS;AACvB,YAAMC,IAAI,GAAGD,GAAG,CAACJ,MAAJ,CAAWM,MAAxB;AACA,YAAMC,EAAE,GAAGhB,IAAI,CAACiB,IAAL,CAAUH,IAAV,EAAgB;AAAEI,QAAAA,IAAI,EAAE;AAAR,OAAhB,CAAX;AACA,YAAMC,MAAM,GAAGH,EAAE,CAACI,UAAH,CAAc,CAAd,CAAf;AACA,YAAMC,EAAE,GAAGL,EAAE,CAACM,MAAH,CAAUH,MAAV,CAAX;AACA,YAAMI,IAAI,GAAGvB,IAAI,CAACwB,KAAL,CAAWC,aAAX,CAAyBJ,EAAzB,CAAb;AACAhB,MAAAA,QAAQ,CAACkB,IAAD,CAAR;AACD,KAPD;;AAQAb,IAAAA,MAAM,CAACgB,kBAAP,CAA0BlB,IAA1B;AACD,GAbD;;AAeA,QAAMmB,YAAY,GAAG,MAAMpB,CAAN,IAAY;AAE/BA,IAAAA,CAAC,CAACqB,cAAF;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY1B,KAAZ;AACA,UAAM2B,GAAG,GAAG,MAAMC,KAAK,CAAC,+CAAD,EAAiD;AACpEC,MAAAA,MAAM,EAAC,MAD6D;AAEpEC,MAAAA,OAAO,EAAE;AACJ,wBAAiB;AADb,OAF2D;AAKpEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBjC,QAAAA;AADiB,OAAf;AAL8D,KAAjD,CAAvB;AAUA,UAAMmB,IAAI,GAAG,MAAMQ,GAAG,CAACO,IAAJ,EAAnB;;AACA,QAAGf,IAAI,CAACgB,MAAL,KAAgB,IAAnB,EAAwB;AACpBC,MAAAA,KAAK,CAAC,YAAD,CAAL;AACH,KAFD,MAGI;AACAA,MAAAA,KAAK,CAACjB,IAAI,CAACkB,KAAN,CAAL;AACH;AAEJ,GAvBC;;AAyBF,QAAMC,IAAI,GAAG,MAAM,CAElB,CAFD;AAKC,CAhDD;;GAAMvC,U;;KAAAA,U;AAkDN,eAAeA,UAAf","sourcesContent":["import {useState} from 'react'\r\nimport React from \"react\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { Navigate ,useNavigate} from 'react-router-dom'\r\n\r\nconst StudentDet = () => {\r\n  const [files,setfiles] = useState()\r\n\r\n  const onChange = (e) => {\r\n    const [file] = e.target.files;\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = (evt) => {\r\n      const bstr = evt.target.result;\r\n      const wb = XLSX.read(bstr, { type: \"binary\" });\r\n      const wsname = wb.SheetNames[0];\r\n      const ws = wb.Sheets[wsname];\r\n      const data = XLSX.utils.sheet_to_json(ws);\r\n      setfiles(data);\r\n    };\r\n    reader.readAsBinaryString(file);\r\n  };\r\n\r\n  const handleSubmit = async(e) => {\r\n\r\n    e.preventDefault();\r\n\r\n    console.log(files);\r\n    const res = await fetch('https://vignanminiproject.herokuapp.com/excel',{\r\n        method:'POST',\r\n        headers: {\r\n             'Content-Type' : 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            files\r\n        })\r\n    })\r\n\r\n    const data = await res.json()\r\n    if(data.status === 'ok'){\r\n        alert(\"successful\");\r\n    }\r\n    else{\r\n        alert(data.error)\r\n    }\r\n    \r\n}\r\n\r\nconst Func = () => {\r\n\r\n}\r\n\r\n  \r\n}\r\n\r\nexport default StudentDet"]},"metadata":{},"sourceType":"module"}