{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\badri\\\\OneDrive\\\\Desktop\\\\StudentResults\\\\client\\\\src\\\\components\\\\StudentDet.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport React from \"react\";\nimport * as XLSX from \"xlsx\";\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StudentDet = () => {\n  _s();\n\n  const [files, setfiles] = useState();\n  const [te, sette] = useState(localStorage.getItem('tid'));\n\n  const onChange = e => {\n    const [file] = e.target.files;\n    const reader = new FileReader();\n\n    reader.onload = evt => {\n      const bstr = evt.target.result;\n      const wb = XLSX.read(bstr, {\n        type: \"binary\"\n      });\n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname];\n      const data = XLSX.utils.sheet_to_json(ws);\n      setfiles(data);\n    };\n\n    reader.readAsBinaryString(file);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(files);\n    const res = await fetch('https://vignanminiproject.herokuapp.com/excel', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        files\n      })\n    });\n    const data = await res.json();\n\n    if (data.status === 'ok') {\n      alert(\"successful\");\n    } else {\n      alert(data.error);\n    }\n  };\n\n  const Func = () => {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"user1\",\n      id: \"user1\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user signinBx\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"imgBx\",\n            children: /*#__PURE__*/_jsxDEV(\"lottie-player\", {\n              src: \"https://assets10.lottiefiles.com/packages/lf20_h9rxcjpi.json\",\n              background: \"transparent\",\n              speed: \"1\",\n              style: {\n                width: \"100%\",\n                height: \"100%\"\n              },\n              loop: true,\n              autoplay: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formBx\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this);\n  };\n\n  return te ? /*#__PURE__*/_jsxDEV(Func, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 15\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 25\n  }, this);\n};\n\n_s(StudentDet, \"w9gcINI19/QQF3ZzTArsYOrPhkk=\");\n\n_c = StudentDet;\nexport default StudentDet;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentDet\");","map":{"version":3,"sources":["C:/Users/badri/OneDrive/Desktop/StudentResults/client/src/components/StudentDet.jsx"],"names":["useState","React","XLSX","Navigate","useNavigate","StudentDet","files","setfiles","te","sette","localStorage","getItem","onChange","e","file","target","reader","FileReader","onload","evt","bstr","result","wb","read","type","wsname","SheetNames","ws","Sheets","data","utils","sheet_to_json","readAsBinaryString","handleSubmit","preventDefault","console","log","res","fetch","method","headers","body","JSON","stringify","json","status","alert","error","Func","width","height"],"mappings":"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","sourcesContent":["import {useState} from 'react'\r\nimport React from \"react\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { Navigate ,useNavigate} from 'react-router-dom'\r\n\r\nconst StudentDet = () => {\r\n  const [files,setfiles] = useState();\r\n  const [te,sette] =  useState(localStorage.getItem('tid'));\r\n\r\n  const onChange = (e) => {\r\n    const [file] = e.target.files;\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = (evt) => {\r\n      const bstr = evt.target.result;\r\n      const wb = XLSX.read(bstr, { type: \"binary\" });\r\n      const wsname = wb.SheetNames[0];\r\n      const ws = wb.Sheets[wsname];\r\n      const data = XLSX.utils.sheet_to_json(ws);\r\n      setfiles(data);\r\n    };\r\n    reader.readAsBinaryString(file);\r\n  };\r\n\r\n  const handleSubmit = async(e) => {\r\n\r\n    e.preventDefault();\r\n\r\n    console.log(files);\r\n    const res = await fetch('https://vignanminiproject.herokuapp.com/excel',{\r\n        method:'POST',\r\n        headers: {\r\n             'Content-Type' : 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            files\r\n        })\r\n    })\r\n\r\n    const data = await res.json()\r\n    if(data.status === 'ok'){\r\n        alert(\"successful\");\r\n    }\r\n    else{\r\n        alert(data.error)\r\n    }\r\n    \r\n}\r\n\r\nconst Func = () => {\r\n  return (\r\n    <section className=\"user1\" id=\"user1\">\r\n        <div className=\"container2\">\r\n            <div className=\"user signinBx\">\r\n                <div className=\"imgBx\">\r\n                    <lottie-player src=\"https://assets10.lottiefiles.com/packages/lf20_h9rxcjpi.json\"  background=\"transparent\"  speed=\"1\"  style={{width: \"100%\" , height: \"100%\"}}  loop  autoplay></lottie-player>\r\n                </div>\r\n                <div className=\"formBx\">\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nreturn ( te ? <Func/> : <Navigate to =\"/\" />)\r\n}\r\n\r\nexport default StudentDet"]},"metadata":{},"sourceType":"module"}